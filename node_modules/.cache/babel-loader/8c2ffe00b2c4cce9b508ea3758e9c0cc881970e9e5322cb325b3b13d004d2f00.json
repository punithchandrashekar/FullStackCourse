{"ast":null,"code":"var _jsxFileName = \"/Users/punithchandrashekar/Desktop/Bookshelf-Project/bookshelf-frontend/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [friendUpdates, setFriendUpdates] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch currently reading books\n        const readingRes = await axios.get(\"http://localhost:5000/api/dashboard/currently-reading\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        setCurrentlyReading(readingRes.data);\n\n        // Fetch friend updates\n        const updatesRes = await axios.get(\"http://localhost:5000/api/dashboard/friend-updates\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        setFriendUpdates(updatesRes.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), currentlyReading.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No books in your \\\"Currently Reading\\\" list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this) : currentlyReading.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.coverImage,\n          alt: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"by \", book.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              try {\n                await axios.post(`http://localhost:5000/api/dashboard/mark-finished/${book._id}`, {}, {\n                  headers: {\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                  }\n                });\n                setCurrentlyReading(currentlyReading.filter(b => b._id !== book._id));\n              } catch (err) {\n                console.error(err);\n              }\n            },\n            children: \"I've Finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, book._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Friend Updates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), friendUpdates.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No updates from your friends yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this) : friendUpdates.map(update => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"social-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: update.friendName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), \" recommended\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/books/${update.bookId}`,\n            children: update.bookTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: update.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)]\n      }, update._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"JXkvFOcvjqFsEUY2e+RE7RB+9UQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","Dashboard","_s","currentlyReading","setCurrentlyReading","friendUpdates","setFriendUpdates","fetchData","readingRes","get","headers","Authorization","localStorage","getItem","data","updatesRes","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","book","className","src","coverImage","alt","title","author","onClick","post","_id","filter","b","update","friendName","to","bookId","bookTitle","comment","_c","$RefreshReg$"],"sources":["/Users/punithchandrashekar/Desktop/Bookshelf-Project/bookshelf-frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard() {\n    const [currentlyReading, setCurrentlyReading] = useState([]);\n    const [friendUpdates, setFriendUpdates] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Fetch currently reading books\n                const readingRes = await axios.get(\"http://localhost:5000/api/dashboard/currently-reading\", {\n                    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n                });\n                setCurrentlyReading(readingRes.data);\n\n                // Fetch friend updates\n                const updatesRes = await axios.get(\"http://localhost:5000/api/dashboard/friend-updates\", {\n                    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n                });\n                setFriendUpdates(updatesRes.data);\n            } catch (err) {\n                console.error(err);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <h1>Dashboard</h1>\n\n            {/* Currently Reading Section */}\n            <section>\n                <h2>Currently Reading</h2>\n                {currentlyReading.length === 0 ? (\n                    <p>No books in your \"Currently Reading\" list.</p>\n                ) : (\n                    currentlyReading.map((book) => (\n                        <div key={book._id} className=\"book-item\">\n                            <img src={book.coverImage} alt={book.title} />\n                            <div>\n                                <h3>{book.title}</h3>\n                                <p>by {book.author}</p>\n                                <button\n                                    onClick={async () => {\n                                        try {\n                                            await axios.post(\n                                                `http://localhost:5000/api/dashboard/mark-finished/${book._id}`,\n                                                {},\n                                                {\n                                                    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n                                                }\n                                            );\n                                            setCurrentlyReading(currentlyReading.filter((b) => b._id !== book._id));\n                                        } catch (err) {\n                                            console.error(err);\n                                        }\n                                    }}\n                                >\n                                    I've Finished\n                                </button>\n                            </div>\n                        </div>\n                    ))\n                )}\n            </section>\n\n            {/* Friend Updates Section */}\n            <section>\n                <h2>Friend Updates</h2>\n                {friendUpdates.length === 0 ? (\n                    <p>No updates from your friends yet.</p>\n                ) : (\n                    friendUpdates.map((update) => (\n                        <div key={update._id} className=\"social-card\">\n                            <p>\n                                <strong>{update.friendName}</strong> recommended{\" \"}\n                                <Link to={`/books/${update.bookId}`}>{update.bookTitle}</Link>\n                            </p>\n                            <p>{update.comment}</p>\n                        </div>\n                    ))\n                )}\n            </section>\n        </div>\n    );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}